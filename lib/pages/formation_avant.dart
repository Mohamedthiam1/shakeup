import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

//page d'informations "Avant un S√©isme"
class AvantPage extends StatefulWidget {
  const AvantPage({super.key});

  @override
  State<AvantPage> createState() => _AvantPage(); // R√©cup√©ration de la largeur de l'√©cran pour une mise en page r√©active
}

class _AvantPage extends State<AvantPage> {
  String selectedLanguage = 'Fran√ßais'; // Langue par d√©faut

  @override
  void initState() {
    super.initState();
    _checkFirstTimeOpening(); // V√©rifie si l'utilisateur ouvre la page pour la premi√®re fois
    _loadLanguage(); // Charger la langue au d√©marrage
  }

  // Charger la langue depuis SharedPreferences
  Future<void> _loadLanguage() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    String? language = prefs.getString('selected_language');
    if (language != null) {
      setState(() {
        selectedLanguage = language;
      });
    }
  }

  // V√©rifie si c'est la premi√®re fois que l'utilisateur ouvre cette page
  Future<void> _checkFirstTimeOpening() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    bool hasOpenedBefore = prefs.getBool('opened_educational_file') ?? false;

    if (!hasOpenedBefore) {
      await prefs.setBool('opened_educational_file', true); // Enregistre l'ouverture
      _showBadgePopup(); // Affiche le pop-up de badge d√©bloqu√©
    }
  }

  // Affiche une bo√Æte de dialogue pour signaler que l'utilisateur a d√©bloqu√© un badge
  void _showBadgePopup() {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
          title: const Row(
            children: [
              Icon(Icons.search, color: Colors.blue, size: 40),
              SizedBox(width: 10),
              Text("Badge D√©bloqu√© !"),
            ],
          ),
          content: const Text(
            "F√©licitations ! Tu as obtenu le badge \"Chercheur d√©butant\".",
            style: TextStyle(fontSize: 16),
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.of(context).pop(); // Fermer le pop-up
              },
              child: const Text("OK", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
            ),
          ],
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.black), // Ic√¥ne de retour
          onPressed: () {
            Navigator.of(context).pop(); // Action de retour
          },
        ),
        title: Text(selectedLanguage == 'Fran√ßais' ? 'Avant un S√©isme' : 'Before an Earthquake',
          style: const TextStyle(
            fontFamily: 'Arima',
            fontSize: 22,
            fontWeight: FontWeight.w400,
            color: Colors.black,
          ),
        ),
        backgroundColor: Colors.green[100], // Couleur de fond verte pour l'AppBar
        centerTitle: true,
      ),

      body: Padding(
        padding: const EdgeInsets.all(16.0), // Marges autour du contenu pour un espacement uniforme
        child: SingleChildScrollView(
          // Permet le d√©filement si le contenu d√©passe la hauteur de l'√©cran
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start, // Contenu align√© √† gauche
            children: [
              // Section 1: Comprendre les tremblements de terre
              _buildSection(
                selectedLanguage == 'Fran√ßais'
                    ? '1. Qu‚Äôest-ce qu‚Äôun tremblement de terre ? üåç'
                    : '1. What is an Earthquake? üåç',
                selectedLanguage == 'Fran√ßais'
                    ? 'Un tremblement de terre, c‚Äôest quand la Terre bouge ! Cela arrive \n parce que des plaques sous le sol glissent. Pas de panique, on peut apprendre √† se prot√©ger !'
                    : 'An earthquake is when the Earth moves ! It happens \n because plates under the ground are sliding. Don\'t panic, you can learn to protect yourself !',
                Icons.emoji_nature,
                selectedLanguage == 'Fran√ßais'
                    ? 'La Terre est vivante et parfois elle danse ! üåç‚ú®'
                    : 'The Earth is alive and sometimes it dances ! üåç‚ú®',
              ),

              // Section 2: Construire un kit d'urgence
              _buildSection(
                  selectedLanguage == 'Fran√ßais'
                      ? '2. Fabrique ton kit d‚Äôurgence üéí'
                      : '2. Make your emergency kit üéí',
                  selectedLanguage == 'Fran√ßais'
                      ? 'Un sac magique pour √™tre pr√™t en cas d‚Äôurgence ! Ajoute ces objets :'
                      : 'A magic bag to be prepared in case of emergency! Add these items:',
                  null,
                  null,
                  listItems: [
                    {'icon': Icons.flashlight_on, 'text': selectedLanguage == 'Fran√ßais' ? 'Une lampe de poche pour voir dans le noir.' : 'A flashlight to see in the dark.'},
                    {'icon': Icons.medical_services, 'text': selectedLanguage == 'Fran√ßais' ? 'Une trousse de secours pour soigner les petits bobos.' : 'A first aid kit to treat minor injuries.'},
                    {'icon': Icons.water_drop, 'text': selectedLanguage == 'Fran√ßais' ? 'De l‚Äôeau pour rester hydrat√©.' : 'Water to stay hydrated.'},
                    {'icon': Icons.cookie, 'text': selectedLanguage == 'Fran√ßais' ? 'Des snacks pour avoir de l‚Äô√©nergie.' : 'Snacks for energy.'},
                    {'icon': Icons.bed, 'text': selectedLanguage == 'Fran√ßais' ? 'Une couverture pour rester au chaud.' : 'A blanket to stay warm.'},
                    {'icon': Icons.volume_up, 'text': selectedLanguage == 'Fran√ßais' ? 'Un sifflet pour appeler √† l‚Äôaide.' : 'A whistle to call for help.'},
                  ]
              ),

              // Section 3: Les gestes qui sauvent
              _buildSection(
                  selectedLanguage == 'Fran√ßais' ? '3. Les gestes qui sauvent üö®' : '3. Life-saving actions üö®',
                  selectedLanguage == 'Fran√ßais' ? 'Apprends ces 3 gestes importants pour te prot√©ger :' : 'Learn these 3 important actions to protect yourself:',
                  null,
                  null,
                  listItems: [
                    {'icon': Icons.pan_tool, 'text': selectedLanguage == 'Fran√ßais' ? '1. Baisse-toi pour √©viter de tomber.' : '1. Drop to avoid falling.'},
                    {'icon': Icons.shield, 'text': selectedLanguage == 'Fran√ßais' ? '2. Cache-toi sous une table solide.' : '2. Hide under a sturdy table.'},
                    {'icon': Icons.handshake, 'text': selectedLanguage == 'Fran√ßais' ? '3. Accroche-toi jusqu‚Äô√† ce que √ßa s‚Äôarr√™te.' : '3. Hold on until it stops.'},
                  ]
              ),

              // Section 4: Pr√©parer sa maison
              _buildSection(
                  selectedLanguage == 'Fran√ßais' ? '4. Rends ta maison plus s√ªre üè°' : '4. Make your home safer üè°',
                  selectedLanguage == 'Fran√ßais' ? 'Voici comment s√©curiser ta maison :' : 'Here‚Äôs how to secure your home:',
                  null,
                  null,
                  listItems: [
                    {'icon': Icons.lock, 'text': selectedLanguage == 'Fran√ßais' ? 'Demande √† un adulte de fixer les meubles lourds au mur.' : 'Ask an adult to anchor heavy furniture to the wall.'},
                    {'icon': Icons.cleaning_services, 'text': selectedLanguage == 'Fran√ßais' ? 'Range les objets fragiles et les jouets sous les √©tag√®res.' : 'Store fragile items and toys under shelves.'},
                    {'icon': Icons.search, 'text': selectedLanguage == 'Fran√ßais' ? 'Rep√®re les coins s√ªrs o√π tu peux te cacher (comme sous une table).' : 'Identify safe corners where you can hide (like under a table).'},
                    {'icon': Icons.delete, 'text': selectedLanguage == 'Fran√ßais' ? 'Ramasse les jouets qui tra√Ænent pour ne pas que quelqu‚Äôun tombe.' : 'Pick up toys lying around to avoid tripping.'},
                    {'icon': Icons.check_circle, 'text': selectedLanguage == 'Fran√ßais' ? 'V√©rifie que rien ne bloque la sortie d‚Äôurgence.' : 'Check that nothing blocks the emergency exit.'},
                    {'icon': Icons.add, 'text': selectedLanguage == 'Fran√ßais' ? '√âtiquette ton kit d‚Äôurgence pour savoir o√π il est en cas de besoin.' : 'Label your emergency kit so you know where it is in case of need.'},
                  ]
              ),

              // Section 5: Num√©ros d'urgence
              _buildSection(
                  selectedLanguage == 'Fran√ßais' ? '5. Les num√©ros importants √† retenir üìû' : '5. Important emergency numbers to remember üìû',
                  selectedLanguage == 'Fran√ßais' ? 'Garde ces num√©ros √† port√©e de main :' : 'Keep these numbers handy:',
                  null,
                  null,
                  listItems: [
                    {'icon': Icons.fire_extinguisher, 'text': selectedLanguage == 'Fran√ßais' ? 'Pompiers : 18' : 'Fire department: 18'},
                    {'icon': Icons.local_police, 'text': selectedLanguage == 'Fran√ßais' ? 'Police : 17' : 'Police: 17'},
                    {'icon': Icons.health_and_safety, 'text': selectedLanguage == 'Fran√ßais' ? 'Urgences m√©dicales : 15' : 'Medical emergency: 15'},
                    {'icon': Icons.phone, 'text': selectedLanguage == 'Fran√ßais' ? 'Ajoute le num√©ro de ta famille.' : 'Add your family‚Äôs phone number.'},
                  ]
              ),

              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    Navigator.pop(context); // Retour √† la page pr√©c√©dente
                  },
                  child: Text(selectedLanguage == 'Fran√ßais' ? 'Retour √† l\'Accueil' : 'Return to Home'),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.green,
                    padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
                    textStyle: const TextStyle(
                      fontFamily: 'Arima',
                      fontSize: 16,
                      fontWeight: FontWeight.w400,
                      color: Colors.black,
                    ),
                  ),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }

  // Fonction utilitaire pour cr√©er une section avec un titre, un contenu et des ic√¥nes
  Widget _buildSection(
      String title,
      String content,
      IconData? icon,
      String? iconText, {
        List<Map<String, dynamic>>? listItems,
      }) {
    return Container(
      margin: const EdgeInsets.only(bottom: 20),
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.blue[50],
        borderRadius: BorderRadius.circular(16),
        boxShadow: const [
          BoxShadow(
            color: Colors.black12,
            blurRadius: 5,
            offset: Offset(0, 3),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontFamily: 'Arima',
              fontSize: 20,
              fontWeight: FontWeight.w400,
              color: Colors.blueAccent,
            ),
          ),
          const SizedBox(height: 10),
          Text(
            content,
            style: const TextStyle(
              fontFamily: 'Arima',
              fontSize: 18,
              fontWeight: FontWeight.w400,
              color: Colors.black87,
            ),
          ),
          if (icon != null && iconText != null) ...[
            const SizedBox(height: 10),
            _iconWithText(icon, iconText),
          ],
          if (listItems != null) ...[
            const SizedBox(height: 10),
            _listItemsWithIcons(listItems),
          ],
        ],
      ),
    );
  }

  // Widget pour afficher une liste d'√©l√©ments avec des ic√¥nes
  Widget _iconWithText(IconData icon, String text) {
    return Row(
      children: [
        Icon(icon, size: 32, color: Colors.green),
        const SizedBox(width: 10),
        Expanded(
          child: Text(
            text,
            style: const TextStyle(fontSize: 16, fontWeight: FontWeight.w500),
          ),
        ),
      ],
    );
  }

  Widget _listItemsWithIcons(List<Map<String, dynamic>> items) {
    return Column(
      children: items.map((item) {
        return Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Icon(item['icon'], color: Colors.blueAccent, size: 28),
            const SizedBox(width: 10),
            Expanded(
              child: Text(
                item['text'],
                style: const TextStyle(fontSize: 16),
              ),
            ),
          ],
        );
      }).toList(),
    );
  }
}
